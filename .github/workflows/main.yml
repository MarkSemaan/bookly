name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: bookstore
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo_mysql, mbstring, zip, bcmath
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Copy .env
        run: cp .env.example .env
        working-directory: ./backend

      - name: Set up database environment variables
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=database" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=bookstore" >> .env
          echo "DB_USERNAME=ali" >> .env
          echo "DB_PASSWORD=password" >> .env
        working-directory: ./backend

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
        working-directory: ./backend

      - name: Generate application key
        run: php artisan key:generate
        working-directory: ./backend

      - name: Run Laravel Migrations
        run: php artisan migrate --force
        working-directory: ./backend

      - name: Run Laravel Tests
        run: php artisan test
        working-directory: ./backend

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build frontend application
        run: npm run build
        working-directory: ./frontend
